Docker Storage:
--------------------------->
1. Storage Drivers
2. Volume Driver Plugins


Docker Storage Drivers and Filesystems:
-------------------------------------------------->

on local FS:
------------->
/var/lib/docker 

dockers layered architecture
-------------------------------> 
reuse cached image layers


"image layer" --> Read Only
-------------------------------------------------->
Layer5: update entrypoint with "flask" command
Layer4: Source code
Layer3: changes in pip packages
Layer2: Changes in apt packages
layer1: Base ubuntu layer

"container layer" --> Read Write
----------------------------------------------------->

 docker build Dockerfile -t bharath/webapp
 docker run bharath/webap

 when we run a container from the image ...
 docker creates a container based on the "imagelayer" and creates a new writebale layer("container layer") on top of the image layer.

 then the "writeable layer" is used to store the data created by the container such as log files written by the application and any temporary files generated by the container.
 or any files modified by the use in the container, the life of this layer is till the container is alive.

 The same image layer used by all the containers created by this image.


Mount Volumes: Volumes are created by docker(Volme Mount)
------------------------------------------------------->

docker volume create data_volume
docker run -v data_volume:/var/lib/mysql mysql

docker run -v data_volume2:/var/lib/mysql mysql  #docker automatically creates data_volume2(docker volume create data_volume2)


to mount existing host directory(cause the data already present there) we need to use full path as below:(Bind mount)
----------------------------------------------------------------------------------------------------------------------->
docker run -v /data/mysql:/var/lib/mysql mysql 
docker run --mount type=bind,source=/data/mysql,target=/var/lib/mysql mysql 